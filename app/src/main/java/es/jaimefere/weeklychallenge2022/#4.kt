package es.jaimefere.weeklychallenge2022

/*
 * Reto #4
 * 츼REA DE UN POL칈GONO
 * Fecha publicaci칩n enunciado: 24/01/22
 * Fecha publicaci칩n resoluci칩n: 31/01/22
 * Dificultad: F츼CIL
 *
 * Enunciado: Crea UNA 칔NICA FUNCI칍N (importante que s칩lo sea una) que sea capaz de calcular y retornar el 치rea de un pol칤gono.
 * - La funci칩n recibir치 por par치metro s칩lo UN pol칤gono a la vez.
 * - Los pol칤gonos soportados ser치n Tri치ngulo, Cuadrado y Rect치ngulo.
 * - Imprime el c치lculo del 치rea de un pol칤gono de cada tipo.
 *
 * Informaci칩n adicional:
 * - Usa el canal de nuestro discord (https://mouredev.com/discord) "游대reto-semanal" para preguntas, dudas o prestar ayuda la acomunidad.
 * - Puedes hacer un Fork del repo y una Pull Request al repo original para que veamos tu soluci칩n aportada.
 * - Revisar칠 el ejercicio en directo desde Twitch el lunes siguiente al de su publicaci칩n.
 * - Subir칠 una posible soluci칩n al ejercicio el lunes siguiente al de su publicaci칩n.
 *
 */

fun main() {
    println(Polygon(true,4.0).getArea())
    println(Polygon(true, 7.0, 4.0).getArea())
    println(Polygon(false, 3.0, 4.0, 5.0).getArea())
    println(Polygon(false, 3.0, 4.0).getArea())     // isosceles
    println(Polygon(false, 3.0).getArea())      // equilateral
}

class Polygon(
    private val hasFourVertices: Boolean,
    private val sideA: Double,
    private var sideB: Double = 0.0,
    private var sideC: Double = 0.0
) {
    fun getArea(): Double {
        return if(hasFourVertices) {
            if(sideB == 0.0) {  // square
                sideB = sideA
            }
            sideA * sideB
        } else {
            if(sideB == 0.0) {  // equilateral
                sideB = sideA
            }
            if(sideC == 0.0) {  // isosceles
                sideC = sideB
            }
            val semiperimeter = (sideA + sideB + sideC) / 2.0
            Math.sqrt(semiperimeter * (semiperimeter - sideA) * (semiperimeter - sideB) * (semiperimeter - sideC))
        }
    }
}


